{"ast":null,"code":"import _asyncToGenerator from \"/Users/samuelaraag/Desktop/star_wars_tribute/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nconst urlFilmes = \"https://swapi.py4e.com/api/films\";\nconst urlGeral = \"https://swapi.py4e.com/api/\";\nlet ListaCategoriasComponent = class ListaCategoriasComponent {\n  constructor() {\n    this.imagensCategorias = [\"../../assets/imagens/categorias/people.jpg\", \"../../assets/imagens/categorias/planets.jpeg\", \"../../assets/imagens/categorias/films.jpeg\", \"../../assets/imagens/categorias/species.png\", \"../../assets/imagens/categorias/vehicles.jpg\", \"../../assets/imagens/categorias/starships.jpg\"];\n  }\n  ngOnInit() {\n    this._pegarTodasAsCategorias();\n    this.pegarNomesDasCategorias(this.listaDosFilmes);\n  }\n  _pegarTodasAsCategorias() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const response = yield fetch(urlGeral);\n      const data = yield response.json();\n      const results = data;\n      _this.categorias = _this.pegarNomesDasCategorias(results);\n      _this.categorias = _this._formatarTextoComPrimeiraLetraMaiuscula(_this.categorias);\n      _this.imagensCategorias;\n    })();\n  }\n  pegarNomesDasCategorias(objeto) {\n    return Object.getOwnPropertyNames(objeto);\n  }\n  abrirCategoria(categoria) {\n    this._buscarCategoriaSelecionada(categoria);\n    alert(\"Não implementado\");\n  }\n  _buscarCategoriaSelecionada(categoria) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const response = yield fetch(urlGeral + \"/\" + categoria);\n      const data = yield response.json();\n      const results = data.results;\n      console.log(results);\n      _this2.listaDosFilmes = results;\n    })();\n  }\n  _formatarTextoComPrimeiraLetraMaiuscula(palavras) {\n    return palavras.map(word => word.charAt(0).toUpperCase() + word.slice(1));\n  }\n};\nListaCategoriasComponent = __decorate([Component({\n  selector: \"app-lista-categorias\",\n  templateUrl: \"./lista-categorias.component.html\",\n  styleUrls: [\"./lista-categorias.component.scss\"]\n})], ListaCategoriasComponent);\nexport { ListaCategoriasComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,QAAQ,GAAG,6BAA6B;AAOvC,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAA9BC;IAIL,sBAAiB,GAAU,CACzB,4CAA4C,EAC5C,8CAA8C,EAC9C,4CAA4C,EAC5C,6CAA6C,EAC7C,8CAA8C,EAC9C,+CAA+C,CAChD;EAuCH;EArCEC,QAAQ;IACN,IAAI,CAACC,uBAAuB,EAAE;IAC9B,IAAI,CAACC,uBAAuB,CAAC,IAAI,CAACC,cAAc,CAAC;EACnD;EAEMF,uBAAuB;IAAA;IAAA;MAC3B,MAAMG,QAAQ,SAASC,KAAK,CAACR,QAAQ,CAAC;MACtC,MAAMS,IAAI,SAASF,QAAQ,CAACG,IAAI,EAAE;MAClC,MAAMC,OAAO,GAAGF,IAAI;MACpB,KAAI,CAACG,UAAU,GAAG,KAAI,CAACP,uBAAuB,CAACM,OAAO,CAAC;MACvD,KAAI,CAACC,UAAU,GAAG,KAAI,CAACC,uCAAuC,CAC5D,KAAI,CAACD,UAAU,CAChB;MACD,KAAI,CAACE,iBAAiB;IAAC;EACzB;EAEAT,uBAAuB,CAACU,MAAW;IACjC,OAAOC,MAAM,CAACC,mBAAmB,CAACF,MAAM,CAAC;EAC3C;EAEAG,cAAc,CAACC,SAAc;IAC3B,IAAI,CAACC,2BAA2B,CAACD,SAAS,CAAC;IAE3CE,KAAK,CAAC,kBAAkB,CAAC;EAC3B;EAEMD,2BAA2B,CAACD,SAAc;IAAA;IAAA;MAC9C,MAAMZ,QAAQ,SAASC,KAAK,CAACR,QAAQ,GAAG,GAAG,GAAGmB,SAAS,CAAC;MACxD,MAAMV,IAAI,SAASF,QAAQ,CAACG,IAAI,EAAE;MAClC,MAAMC,OAAO,GAAGF,IAAI,CAACE,OAAO;MAC5BW,OAAO,CAACC,GAAG,CAACZ,OAAO,CAAC;MACpB,MAAI,CAACL,cAAc,GAAGK,OAAO;IAAC;EAChC;EAEAE,uCAAuC,CAACW,QAAkB;IACxD,OAAOA,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7E;CACD;AAlDY5B,wBAAwB,eALpCH,SAAS,CAAC;EACTgC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACW/B,wBAAwB,CAkDpC;SAlDYA,wBAAwB","names":["Component","urlFilmes","urlGeral","ListaCategoriasComponent","constructor","ngOnInit","_pegarTodasAsCategorias","pegarNomesDasCategorias","listaDosFilmes","response","fetch","data","json","results","categorias","_formatarTextoComPrimeiraLetraMaiuscula","imagensCategorias","objeto","Object","getOwnPropertyNames","abrirCategoria","categoria","_buscarCategoriaSelecionada","alert","console","log","palavras","map","word","charAt","toUpperCase","slice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/samuelaraag/Desktop/star_wars_tribute/src/app/lista-categorias/lista-categorias.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\n\nconst urlFilmes = \"https://swapi.py4e.com/api/films\";\nconst urlGeral = \"https://swapi.py4e.com/api/\";\n\n@Component({\n  selector: \"app-lista-categorias\",\n  templateUrl: \"./lista-categorias.component.html\",\n  styleUrls: [\"./lista-categorias.component.scss\"],\n})\nexport class ListaCategoriasComponent {\n  listaDosFilmes: any;\n  categorias: any;\n\n  imagensCategorias: any[] = [\n    \"../../assets/imagens/categorias/people.jpg\",\n    \"../../assets/imagens/categorias/planets.jpeg\",\n    \"../../assets/imagens/categorias/films.jpeg\",\n    \"../../assets/imagens/categorias/species.png\",\n    \"../../assets/imagens/categorias/vehicles.jpg\",\n    \"../../assets/imagens/categorias/starships.jpg\",\n  ];\n\n  ngOnInit() {\n    this._pegarTodasAsCategorias();\n    this.pegarNomesDasCategorias(this.listaDosFilmes);\n  }\n\n  async _pegarTodasAsCategorias() {\n    const response = await fetch(urlGeral);\n    const data = await response.json();\n    const results = data;\n    this.categorias = this.pegarNomesDasCategorias(results);\n    this.categorias = this._formatarTextoComPrimeiraLetraMaiuscula(\n      this.categorias\n    );\n    this.imagensCategorias;\n  }\n\n  pegarNomesDasCategorias(objeto: any) {\n    return Object.getOwnPropertyNames(objeto);\n  }\n\n  abrirCategoria(categoria: any) {\n    this._buscarCategoriaSelecionada(categoria);\n\n    alert(\"Não implementado\");\n  }\n\n  async _buscarCategoriaSelecionada(categoria: any) {\n    const response = await fetch(urlGeral + \"/\" + categoria);\n    const data = await response.json();\n    const results = data.results;\n    console.log(results);\n    this.listaDosFilmes = results;\n  }\n\n  _formatarTextoComPrimeiraLetraMaiuscula(palavras: string[]): string[] {\n    return palavras.map((word) => word.charAt(0).toUpperCase() + word.slice(1));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}